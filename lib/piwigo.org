* Get database credentials
  You need the database password in order to fill in the config form (You must
  un-comment the =echo= line (remove =#=), and accept your own responsibility to
  clear the RESULTS before saving this file!):

  #+begin_src shell :noweb yes :eval never-export :exports code
  MARIADB_PASSWORD=$(<<kubectl>> -n piwigo get secret/mariadb \
    -o jsonpath='{.data.mariadb-password}' | base64 -d)
  echo "Piwigo MariaDB password is: ${MARIADB_PASSWORD}"
  #+end_src

  Now you can go to the PIWIGO_DOMAIN in your browser and configure the database:
  
  * host: =mariadb=
  * username: =piwigo=
  * password: (see above output)
  * database name: =piwigo=
  * admin username and password: make your own up  

* Piwigo attached MariaDB service
#+BEGIN_COMMENT
I /would like/ to just be able to INCLUDE a MariaDB template for Piwigo. But I
haven't figured out a way to "instance" an Org-mode INCLUDE statement to use it
more than once, like a true template. So for now you can just copy this section
into your new projects that depend on MariaDB, and be careful to change all of
the PIWIGO specific variables and paths to your own name-spaced application.
#+END_COMMENT
** PIWIGO_MARIADB_PVC_SIZE
   How big do you need the Database volume?
   #+name: PIWIGO_MARIADB_PVC_SIZE
   #+begin_src config :noweb yes :eval no
   5Gi
   #+end_src
** PIWIGO_MARIADB_HELM_CHART_VERSION
   What version of the [[https://github.com/bitnami/charts/tree/master/bitnami/mariadb][MariaDB Helm Chart]] do you want to install?
   #+name: PIWIGO_MARIADB_HELM_CHART_VERSION
   #+begin_src config :noweb yes :eval no
   9.0.1
   #+end_src
** PIWIGO_MARIADB_DATABASE_NAME
   #+name: PIWIGO_MARIADB_DATABASE_NAME
   #+begin_src config :noweb yes :eval no
   piwigo
   #+end_src
** PIWIGO_MARIADB_DATABASE_USER
   #+name: PIWIGO_MARIADB_DATABASE_USER
   #+begin_src config :noweb yes :eval no
   piwigo
   #+end_src
** piwigo/mariadb/helm.release.yaml
 #+begin_src yaml :noweb yes :eval no :tangle piwigo/mariadb/helm.release.yaml
 apiVersion: helm.toolkit.fluxcd.io/v2beta1
 kind: HelmRelease
 metadata:
   name: piwigo-mariadb
   namespace: flux-system
 spec:
   chart:
     spec:
       chart: mariadb
       version: <<PIWIGO_MARIADB_HELM_CHART_VERSION>>
       sourceRef:
         kind: HelmRepository
         name: bitnami
   releaseName: mariadb
   interval: 5m0s
   targetNamespace: piwigo
   values:
     primary:
       persistence:
         size: <<PIWIGO_MARIADB_PVC_SIZE>>
     auth:
       username: <<PIWIGO_MARIADB_DATABASE_USER>>
       database: <<PIWIGO_MARIADB_DATABASE_NAME>>
 #+end_src

* Backup Piwigo config+photos to S3
You probably consider your photos important, so you should back them up to an
external storage backup. You need to add your S3 credentials into a sealed
secret.

Since you're dealing with a secret, you should copy these commands into a fresh
terminal, and edit them directly in the shell (not edited nor run from Org).
Secrets will be encrypted into a Sealed Secret. In your fresh terminal, ensure
=bracketed-paste= is on, which prevents commands from running automatically when
you paste them in your terminal:

#+begin_src shell :noweb yes :eval never :exports code
# Run this in a new terminal:
set enable-bracketed-paste on
#+end_src

Copy and paste this next code into the same terminal as above. Before pressing
Enter, press =Ctrl-A= to go back to beginning of the first line, or scroll with
the left/right arrow keys (NOT the up/down arrow keys), and edit the variables
before pressing Enter:

#+begin_src shell :noweb yes :eval never :exports code
S3_ENDPOINT=s3.us-west-1.wasabisys.com
S3_BUCKET=mybucket
S3_ACCESS_KEY_ID=xxxxxxxxx
S3_SECRET_ACCESS_KEY=xxxxxxxx
SRC_DIR=${HOME}/git/clusters/barrel.rymcg.tech/
kubectl create secret generic piwigo-s3-backup \
   --namespace piwigo --dry-run=client -o json \
   --from-literal=RESTIC_REPOSITORY=s3:https://${S3_ENDPOINT}/${S3_BUCKET} \
   --from-literal=S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID} \
   --from-literal=S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY} \
   | kubeseal -o yaml > \
  ${SRC_DIR}/piwigo/piwigo-s3-backup.sealed_secret.yaml
#+end_src

* piwigo/kustomization.yaml
#+begin_src yaml :noweb yes :eval no :tangle piwigo/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- namespace.yaml
- config.pvc.yaml
- statefulset.yaml
- service.yaml
- piwigo-s3-backup.sealed_secret.yaml
- mariadb/helm.release.yaml
#+end_src
* piwigo/namespace.yaml
#+begin_src yaml :noweb yes :eval no :tangle piwigo/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: piwigo
#+end_src
* piwigo/pvc.yaml
#+begin_src yaml :noweb yes :eval no :tangle piwigo/config.pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: piwigo-data
  namespace: piwigo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-path
#+end_src
* piwigo/statefulset.yaml
#+begin_src yaml :noweb yes :eval no :tangle piwigo/statefulset.yaml
  apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: piwigo
    namespace: piwigo
    labels:
      app: piwigo
  spec:
    serviceName: piwigo
    selector:
      matchLabels:
        app: piwigo
    template:
      metadata:
        labels:
          app: piwigo
      spec:
        containers:
        - name: piwigo
          image: ghcr.io/linuxserver/piwigo
          ports:
          - containerPort: 80
          env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: TZ
            value: "Etc/UTC"
          volumeMounts:
          - name: data
            mountPath: /config
        - name: piwigo-s3-backup
          image: lobaro/restic-backup-docker:1.2-0.9.4
          env:
          - name: RESTIC_REPOSITORY
            valueFrom:
              secretKeyRef:
                name: piwigo-s3-backup
                key: RESTIC_REPOSITORY
          - name: RESTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: piwigo-s3-backup
                key: RESTIC_PASSWORD
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: piwigo-s3-backup
                key: S3_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: piwigo-s3-backup
                key: S3_SECRET_ACCESS_KEY
          volumeMounts:
            - name: data
              mountPath: /data
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: piwigo-data
#+end_src

* piwigo/service.yaml
#+begin_src yaml :noweb yes :eval no :tangle piwigo/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: piwigo
  namespace: piwigo
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
  selector:
    app: piwigo
---
apiVersion: traefik.containo.us/v1alpha1
kind: TraefikService
metadata:
  name: piwigo
  namespace: piwigo
spec:
  weighted:
    services:
      - name: piwigo
        weight: 1
        port: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: piwigo
  namespace: piwigo
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`<<PIWIGO_DOMAIN>>`)
    services:
    - name: piwigo
      port: 80
  tls:
    certResolver: default
#+end_src
